@model Receipt
@inject IClientInstanceInterface _instanceInterface;
@inject ICookiesService _cookies;
@{
    ViewData["Active"] = "POS";
    var title = $"Receipt {Model.Code}";
    ViewData["Title"] = title;
    var userData = _cookies.Read();
    var status = Model.IsPrinted ? $"COPY - {Model.PrintCount}" : "ORIGINAL";
    var saleType = Model.IsCredit ? "CREDIT SALE" : "CASH SALE";
    var instance = _instanceInterface.ByIdAsync(Model.InstanceId).Result.Data;
    var fontZoom = $"{instance.ReceiptFontPercent}%";
    var cashier = string.IsNullOrEmpty(Model.PersonnelName) ? "" : Model.PersonnelName;
    var names = cashier.Split(' ');
}
<div class="card card-primary">
    <div class="card-header row d-print-none">
        <div class="col-6">
            <h3 class="card-title">
                @ViewData["Title"]
            </h3>
        </div>
        <div class="col-6">
            <span class="pull-right text-right">
                <button class="btn btn-secondary btn-block" data-printed="@Model.IsPrinted" data-id="@Model.Id"
                        id="btnPrintReceipt">
                    <i class="fa fa-print"></i> Print Receipt
                </button>
            </span>
        </div>
    </div>
    <div class="card-body" id="printReceiptDiv">
        @{
            <style type="text/css">
                @@media print {
                    #printReceiptDiv {
                        height: auto;
                        font-size: @fontZoom;
                        page-break-inside: avoid;
                    }
                }
            </style>
        }
        <div class="row">
            <div class="col-md-6">
                <p><b>@userData.ClientName?.ToUpper()</b></p>
                <p><b>@userData.InstanceName?.ToUpper()</b></p>
                <p>@instance.PostalAddress - @instance.Town</p>
                <p>PIN : @instance.PinNo</p>
            </div>
            <div class="col-md-6">
                <p><b>Receipt No.</b> @Model.Code <span>[@status]</span> </p>
                <p><b>Customer </b> @Model.Customer.FullName </p>
                <p>
                    <b>Type </b> @saleType
                    @if (Model.PaymentMode != null)
                    {
                        <span>(@Model.PaymentMode.Name)</span>
                    }
                </p>
                @if (!string.IsNullOrEmpty(Model.PinNo))
                {
                    <p><b>Customer PIN.</b> @Model.PinNo</p>
                }
                <p><b>Date </b>@Model.DateCreated</p>
            </div>
        </div>
        <div class="row">
            <table class="table">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Product</th>
                        <th>Qty</th>
                        <th>Price</th>
                        <th>Total</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var i = 0;
                    }
                    @foreach (var item in Model.ReceiptLineItems)
                    {
                        i++;
                        <tr>
                            <td>@i<span>.</span></td>
                            <td>@item.Product.Name</td>
                            <td>@item.Quantity</td>
                            <td>@item.UnitPrice</td>
                            <td>@Helpers.FormatAmount(item.Amount)</td>
                        </tr>
                    }
                    <tr style="page-break-after:avoid">
                        <td colspan="3"></td>
                        <td>Tax</td>
                        <td>@Helpers.FormatAmount(Model.Tax)</td>
                    </tr>
                    @if (Model.Discount >= 0)
                    {
                        <tr>
                            <td colspan="3" style="border:none"></td>
                            <td>Discount</td>
                            <td>@Helpers.FormatAmount(Model.Discount)</td>
                        </tr>
                    }
                    <tr>
                        <td colspan="3" style="border:none"></td>
                        <td>Total</td>
                        <td><b>@userData.CurrencyShort @Helpers.FormatAmount(Model.Amount)</b></td>
                    </tr>
                </tbody>
            </table>
            <div>
                @if (Model.AmountReceived > Model.Amount)
                {
                    <p>
                        RECEIVED @userData.CurrencyShort @Helpers.FormatAmount(Model.AmountReceived)
                        . CHANGE @userData.CurrencyShort @Helpers.FormatAmount(Model.AmountReceived-Model.Amount)
                    </p>
                }
                <p>Served By : @names.FirstOrDefault() @names.Skip(1).FirstOrDefault()  </p>
                <p>@instance.ReceiptFooterNotes</p>
                <hr />
                <p><b>Phone No :</b> @instance.PrimaryTelephone or @instance.SecondaryTelephone</p>
                <p><b>@instance.BusinessShortCodeType :</b> @instance.BusinessShortCode</p>
            </div>
        </div>
    </div>
    <div class="card-footer row d-print-none">
        <div class="col-4">
            <a asp-action="Receipts" class="btn btn-secondary"><i class="fa fa-list"></i> View Receipts </a>
        </div>
        <div class="col-4">
        </div>
        <div class="col-4">
            <a asp-action="Index" class="btn btn-primary"><i class="fa fa-forward"></i> Next Sale</a>
        </div>
    </div>
</div>
